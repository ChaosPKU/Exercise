/*
Given a positive integer n, find the number of non-negative integers less than or equal to n, whose binary representations do NOT contain consecutive ones.

Example 1:
Input: 5
Output: 5
Explanation: 
Here are the non-negative integers <= 5 with their corresponding binary representations:
0 : 0
1 : 1
2 : 10
3 : 11
4 : 100
5 : 101
Among them, only integer 3 disobeys the rule (two consecutive ones) and the other 5 satisfy the rule. 
Note: 1 <= n <= 10^9
*/

class Solution {
public:
    int findIntegers(int num) {
        if(num < 3) return num + 1;
        vector<int> vtr({2, 3});
        int n = 2;
        while(vtr.back() < num){
            vtr.push_back(vtr[n - 1] + vtr[n - 2]);
            ++ n;
        }
        for(int bit = 29; bit >= 0; -- bit)
            if(num & (1 << bit))
                return num & (1 << (bit - 1)) ? vtr[bit] : vtr[bit - 1] + findIntegers(num & ~ (1 << bit));
    }
};
